// <auto-generated />
using System;
using APIHotel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIHotel.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIHotel.Models.CuentasPorCobrar", b =>
                {
                    b.Property<int>("IdCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCuenta"));

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FacturasIdFactura")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdCuenta");

                    b.HasIndex("FacturasIdFactura");

                    b.ToTable("CuentasPorCobrar");
                });

            modelBuilder.Entity("APIHotel.Models.Empleados", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sueldo")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuariosId")
                        .HasColumnType("int");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("UsuariosId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("APIHotel.Models.Facturas", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MontoTotal")
                        .HasColumnType("int");

                    b.Property<int?>("ReservacionesIdReservacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdFactura");

                    b.HasIndex("ReservacionesIdReservacion");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("APIHotel.Models.Habitaciones", b =>
                {
                    b.Property<int>("IdHabitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHabitacion"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Limite")
                        .HasColumnType("int");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdHabitacion");

                    b.ToTable("Habitaciones");
                });

            modelBuilder.Entity("APIHotel.Models.Huespedes", b =>
                {
                    b.Property<int>("IdHuesped")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHuesped"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuariosId")
                        .HasColumnType("int");

                    b.HasKey("IdHuesped");

                    b.HasIndex("UsuariosId");

                    b.ToTable("Huespedes");
                });

            modelBuilder.Entity("APIHotel.Models.Reservaciones", b =>
                {
                    b.Property<int>("IdReservacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReservacion"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HabitacionesIdHabitacion")
                        .HasColumnType("int");

                    b.Property<int?>("HuespedesIdHuesped")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("checkin")
                        .HasColumnType("bit");

                    b.HasKey("IdReservacion");

                    b.HasIndex("HabitacionesIdHabitacion");

                    b.HasIndex("HuespedesIdHuesped");

                    b.ToTable("Reservaciones");
                });

            modelBuilder.Entity("APIHotel.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("APIHotel.Models.RolesUsuarios", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario", "IdRol");

                    b.HasIndex("IdRol");

                    b.ToTable("RolesUsuarios");
                });

            modelBuilder.Entity("APIHotel.Models.Servicios", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdServicio");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("APIHotel.Models.ServiciosFacturas", b =>
                {
                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdFacturas")
                        .HasColumnType("int");

                    b.HasKey("IdServicio", "IdFacturas");

                    b.HasIndex("IdFacturas");

                    b.ToTable("ServiciosFacturas");
                });

            modelBuilder.Entity("APIHotel.Models.Tarjetas_de_creditos", b =>
                {
                    b.Property<int>("IdTarjetaDeCredito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTarjetaDeCredito"));

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HuespedesIdHuesped")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NombreTitular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdTarjetaDeCredito");

                    b.HasIndex("HuespedesIdHuesped");

                    b.ToTable("Tarjetas_de_creditos");
                });

            modelBuilder.Entity("APIHotel.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConteoAccesosFallidos")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmailConfirmed")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("NumeroTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroTelefonoConfirmed")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("APIHotel.Models.CuentasPorCobrar", b =>
                {
                    b.HasOne("APIHotel.Models.Facturas", null)
                        .WithMany("CuentasPorCobrar")
                        .HasForeignKey("FacturasIdFactura");
                });

            modelBuilder.Entity("APIHotel.Models.Empleados", b =>
                {
                    b.HasOne("APIHotel.Models.Usuarios", null)
                        .WithMany("Empleados")
                        .HasForeignKey("UsuariosId");
                });

            modelBuilder.Entity("APIHotel.Models.Facturas", b =>
                {
                    b.HasOne("APIHotel.Models.Reservaciones", null)
                        .WithMany("Facturas")
                        .HasForeignKey("ReservacionesIdReservacion");
                });

            modelBuilder.Entity("APIHotel.Models.Huespedes", b =>
                {
                    b.HasOne("APIHotel.Models.Usuarios", null)
                        .WithMany("Huespedes")
                        .HasForeignKey("UsuariosId");
                });

            modelBuilder.Entity("APIHotel.Models.Reservaciones", b =>
                {
                    b.HasOne("APIHotel.Models.Habitaciones", null)
                        .WithMany("Reservaciones")
                        .HasForeignKey("HabitacionesIdHabitacion");

                    b.HasOne("APIHotel.Models.Huespedes", null)
                        .WithMany("Reservaciones")
                        .HasForeignKey("HuespedesIdHuesped");
                });

            modelBuilder.Entity("APIHotel.Models.RolesUsuarios", b =>
                {
                    b.HasOne("APIHotel.Models.Roles", "Roles")
                        .WithMany("rolesUsuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIHotel.Models.Usuarios", "Usuarios")
                        .WithMany("rolesUsuarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("APIHotel.Models.ServiciosFacturas", b =>
                {
                    b.HasOne("APIHotel.Models.Facturas", "Facturas")
                        .WithMany("ServiciosFacturas")
                        .HasForeignKey("IdFacturas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIHotel.Models.Servicios", "Servicios")
                        .WithMany("ServiciosFacturas")
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facturas");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("APIHotel.Models.Tarjetas_de_creditos", b =>
                {
                    b.HasOne("APIHotel.Models.Huespedes", null)
                        .WithMany("Tarjetas")
                        .HasForeignKey("HuespedesIdHuesped");
                });

            modelBuilder.Entity("APIHotel.Models.Facturas", b =>
                {
                    b.Navigation("CuentasPorCobrar");

                    b.Navigation("ServiciosFacturas");
                });

            modelBuilder.Entity("APIHotel.Models.Habitaciones", b =>
                {
                    b.Navigation("Reservaciones");
                });

            modelBuilder.Entity("APIHotel.Models.Huespedes", b =>
                {
                    b.Navigation("Reservaciones");

                    b.Navigation("Tarjetas");
                });

            modelBuilder.Entity("APIHotel.Models.Reservaciones", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("APIHotel.Models.Roles", b =>
                {
                    b.Navigation("rolesUsuarios");
                });

            modelBuilder.Entity("APIHotel.Models.Servicios", b =>
                {
                    b.Navigation("ServiciosFacturas");
                });

            modelBuilder.Entity("APIHotel.Models.Usuarios", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("Huespedes");

                    b.Navigation("rolesUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
